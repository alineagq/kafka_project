version: "3.8"

services:

  # Controllers (KRaft controllers)
  controller1:
    image: confluentinc/cp-kafka:latest
    container_name: controller1
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "CONTROLLER://:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "controller1"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "19093:9093"
      - "19101:9101"
      - "17071:7071"
    volumes:
      - controller1-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  controller2:
    image: confluentinc/cp-kafka:latest
    container_name: controller2
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: "2"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "CONTROLLER://:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "controller2"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "19094:9093"
      - "19102:9101"
      - "17072:7071"
    volumes:
      - controller2-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  controller3:
    image: confluentinc/cp-kafka:latest
    container_name: controller3
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: "3"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "CONTROLLER://:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "controller3"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "19095:9093"
      - "19103:9101"
      - "17073:7071"
    volumes:
      - controller3-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  # Brokers (KRaft brokers)
  broker1:
    image: confluentinc/cp-kafka:latest
    container_name: broker1
    environment:
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_NODE_ID: "4"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker1:9092,EXTERNAL://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "broker1"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "9092:29092"
      - "9101:9101"
      - "7071:7071"
    depends_on:
      - controller1
      - controller2
      - controller3
    volumes:
      - broker1-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  broker2:
    image: confluentinc/cp-kafka:latest
    container_name: broker2
    environment:
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_NODE_ID: "5"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker2:9092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "broker2"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "9093:29092"
      - "9102:9101"
      - "7072:7071"
    depends_on:
      - controller1
      - controller2
      - controller3
    volumes:
      - broker2-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  broker3:
    image: confluentinc/cp-kafka:latest
    container_name: broker3
    environment:
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_NODE_ID: "6"
      KAFKA_CLUSTER_ID: "1490b9b6-15d4-40fc-b963-5ffa822835fd"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller1:9093,2@controller2:9093,3@controller3:9093"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,EXTERNAL://:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker3:9092,EXTERNAL://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
      KAFKA_JMX_PORT: "9101"
      KAFKA_JMX_HOSTNAME: "broker3"
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=7071:/opt/jmx_exporter/kafka-config.yml"
    ports:
      - "9094:29092"
      - "9103:9101"
      - "7073:7071"
    depends_on:
      - controller1
      - controller2
      - controller3
    volumes:
      - broker3-data:/var/lib/kafka/data
      - ./jmx-exporter:/opt/jmx_exporter

  # AKHQ (formerly known as KafkaHQ) - Kafka GUI
  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-kraft-cluster:
              properties:
                bootstrap.servers: "broker1:9092,broker2:9092,broker3:9092"
              # JMX Configuration
              jmx:
                - name: broker1
                  url: "broker1:9101"
                - name: broker2
                  url: "broker2:9102"
                - name: broker3
                  url: "broker3:9103"
              # Kafka Connect Configuration
              connect:
                - name: "kafka-connect"
                  url: "http://kafka-connect:8083"
    ports:
      - "8080:8080"
    depends_on:
      - broker1
      - broker2
      - broker3
      - kafka-connect

  # LocalStack - Local AWS Cloud Stack
  # Simula múltiplos serviços AWS localmente
  # S3: Armazenamento de dados do Kafka
  # Secrets Manager: Credenciais Kafka/Connect
  # SSM: Configurações do cluster
  # CloudWatch + Logs: Monitoramento e logs
  # SNS + SQS: Notificações e filas
  # Lambda: Processamento serverless de eventos Kafka
  # KMS: Criptografia de dados
  # IAM + STS: Autenticação e autorização
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    environment:
      # Serviços habilitados
      SERVICES: s3,ssm,secretsmanager,iam,sts,cloudwatch,logs,sns,sqs,lambda,kms,events
      DEBUG: 0
      DATA_DIR: /var/lib/localstack
      HOSTNAME_EXTERNAL: localstack
      AWS_DEFAULT_REGION: us-east-1
      
      # Persistência e performance
      PERSIST_STORAGE: 1
      EAGER_SERVICE_LOADING: 1
      SKIP_SSL_CERT_DOWNLOAD: 1
      
      # Lambda configuration
      LAMBDA_EXECUTOR: docker-reuse
      LAMBDA_DOCKER_NETWORK: kafka-project_default
      LAMBDA_REMOVE_CONTAINERS: true
      
      # Logs
      LS_LOG: warn
      
    ports:
      - "4566:4566"      # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services
    volumes:
      - localstack-data:/var/lib/localstack
      - ./localstack-init:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock  # Para Lambda
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Schema Registry
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker1:9092,broker2:9092,broker3:9092"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_DEBUG: "true"
    ports:
      - "8081:8081"
    depends_on:
      - broker1
      - broker2
      - broker3

  # Kafka Connect - S3 Sink
  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker1:9092,broker2:9092,broker3:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "kafka-connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "_connect-configs"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_TOPIC: "_connect-offsets"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: "_connect-status"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect=INFO"
      # AWS Configuration for LocalStack
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_DEFAULT_REGION: "us-east-1"
    ports:
      - "8083:8083"
    depends_on:
      localstack:
        condition: service_healthy
      broker1:
        condition: service_started
      broker2:
        condition: service_started
      broker3:
        condition: service_started
      schema-registry:
        condition: service_started
    command:
      - bash
      - -c
      - |
        echo "Installing S3 Sink Connector..."
        confluent-hub install --no-prompt confluentinc/kafka-connect-s3:10.5.0
        echo "Launching Kafka Connect..."
        /etc/confluent/docker/run

  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - broker1
      - broker2
      - broker3

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

volumes:
  controller1-data:
  controller2-data:
  controller3-data:
  broker1-data:
  broker2-data:
  broker3-data:
  prometheus-data:
  grafana-data:
  localstack-data:
